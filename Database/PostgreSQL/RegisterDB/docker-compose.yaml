version: '3.8'

services:
  postgres-authorize-master:
    image: postgres:17.2
    container_name: postgres-authorize-master
    environment:
      POSTGRES_DB: register
      POSTGRES_USER: kaff
      POSTGRES_PASSWORD: "12345"
    ports:
      - "4000:5432"
    volumes:
      - master_data:/var/lib/postgresql/data
      - ./master-postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./master-init.sh:/docker-entrypoint-initdb.d/master-init.sh:ro
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      - pgnetwork

  postgres-authorize-slave1:
    image: postgres:17.2
    container_name: postgres-authorize-slave1
    environment:
      POSTGRES_DB: register
      POSTGRES_USER: kaff
      POSTGRES_PASSWORD: "12345"
      MASTER_HOST: postgres-authorize-master
      REPLICATION_USER: kaff
      REPLICATION_PASSWORD: "12345"
      APPLICATION_NAME: postgres_authorize_slave1
    ports:
      - "4001:5432"
    volumes:
      - slave1_data:/var/lib/postgresql/data
      - ./slave-entrypoint.sh:/docker-entrypoint-init-slave.sh:ro
    entrypoint: ["/bin/bash", "/docker-entrypoint-init-slave.sh"]
    command: ["postgres"]
    networks:
      - pgnetwork

  postgres-authorize-slave2:
    image: postgres:17.2
    container_name: postgres-authorize-slave2
    environment:
      POSTGRES_DB: register
      POSTGRES_USER: kaff
      POSTGRES_PASSWORD: "12345"
      MASTER_HOST: postgres-authorize-master
      REPLICATION_USER: kaff
      REPLICATION_PASSWORD: "12345"
      APPLICATION_NAME: postgres_authorize_slave2
    ports:
      - "4002:5432"
    volumes:
      - slave2_data:/var/lib/postgresql/data
      - ./slave-entrypoint.sh:/docker-entrypoint-init-slave.sh:ro
    entrypoint: ["/bin/bash", "/docker-entrypoint-init-slave.sh"]
    command: ["postgres"]
    networks:
      - pgnetwork

volumes:
  master_data:
  slave1_data:
  slave2_data:

networks:
  pgnetwork:
